// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commit.proto

package project

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Commit struct {
	Sha         string   `protobuf:"bytes,1,opt,name=sha" json:"sha,omitempty"`
	Message     string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Timestamp   string   `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	AuthorName  string   `protobuf:"bytes,4,opt,name=author_name,json=authorName" json:"author_name,omitempty"`
	AuthorEmail string   `protobuf:"bytes,5,opt,name=author_email,json=authorEmail" json:"author_email,omitempty"`
	Added       []string `protobuf:"bytes,6,rep,name=added" json:"added,omitempty"`
	Removed     []string `protobuf:"bytes,7,rep,name=removed" json:"removed,omitempty"`
	Modified    []string `protobuf:"bytes,8,rep,name=modified" json:"modified,omitempty"`
}

func (m *Commit) Reset()                    { *m = Commit{} }
func (m *Commit) String() string            { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()               {}
func (*Commit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Commit) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *Commit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Commit) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *Commit) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

func (m *Commit) GetAuthorEmail() string {
	if m != nil {
		return m.AuthorEmail
	}
	return ""
}

func (m *Commit) GetAdded() []string {
	if m != nil {
		return m.Added
	}
	return nil
}

func (m *Commit) GetRemoved() []string {
	if m != nil {
		return m.Removed
	}
	return nil
}

func (m *Commit) GetModified() []string {
	if m != nil {
		return m.Modified
	}
	return nil
}

func init() {
	proto.RegisterType((*Commit)(nil), "project.Commit")
}

func init() { proto.RegisterFile("commit.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x41, 0x4e, 0x86, 0x30,
	0x10, 0x46, 0x83, 0xf8, 0xc3, 0xcf, 0xc8, 0xc2, 0x4c, 0x5c, 0x4c, 0x8c, 0x89, 0xe8, 0x8a, 0x95,
	0x1b, 0x8f, 0x60, 0xdc, 0xba, 0xe0, 0x02, 0x66, 0xa4, 0xa3, 0xd4, 0x38, 0x96, 0xb4, 0xd5, 0x03,
	0x7b, 0x12, 0xc3, 0x00, 0xba, 0xeb, 0x7b, 0xef, 0x6b, 0xd2, 0x42, 0x3b, 0x06, 0x55, 0x9f, 0xef,
	0xe6, 0x18, 0x72, 0xc0, 0x7a, 0x8e, 0xe1, 0x5d, 0xc6, 0x7c, 0xfb, 0x53, 0x40, 0xf5, 0x60, 0x05,
	0xcf, 0xa1, 0x4c, 0x13, 0x53, 0xd1, 0x15, 0x7d, 0x33, 0x2c, 0x47, 0x24, 0xa8, 0x55, 0x52, 0xe2,
	0x37, 0xa1, 0x13, 0xb3, 0x3b, 0xe2, 0x15, 0x34, 0xd9, 0xab, 0xa4, 0xcc, 0x3a, 0x53, 0x69, 0xed,
	0x5f, 0xe0, 0x35, 0x9c, 0xf1, 0x57, 0x9e, 0x42, 0x7c, 0xfe, 0x64, 0x15, 0x3a, 0xb5, 0x0e, 0xab,
	0x7a, 0x62, 0x15, 0xbc, 0x81, 0x76, 0x1b, 0x88, 0xb2, 0xff, 0xa0, 0x83, 0x2d, 0xb6, 0x4b, 0x8f,
	0x8b, 0xc2, 0x0b, 0x38, 0xb0, 0x73, 0xe2, 0xa8, 0xea, 0xca, 0xbe, 0x19, 0x56, 0x58, 0x5e, 0x14,
	0x45, 0xc3, 0xb7, 0x38, 0xaa, 0xcd, 0xef, 0x88, 0x97, 0x70, 0xd4, 0xe0, 0xfc, 0xab, 0x17, 0x47,
	0x47, 0x4b, 0x7f, 0xfc, 0x52, 0xd9, 0xa7, 0xef, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x7b,
	0x0f, 0xc2, 0x04, 0x01, 0x00, 0x00,
}
