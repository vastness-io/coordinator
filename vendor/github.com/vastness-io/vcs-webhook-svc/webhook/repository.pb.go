// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repository.proto

package vcs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Repository struct {
	Id           int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Owner        *User  `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	FullName     string `protobuf:"bytes,4,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	Description  string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Private      bool   `protobuf:"varint,6,opt,name=private" json:"private,omitempty"`
	Fork         bool   `protobuf:"varint,7,opt,name=fork" json:"fork,omitempty"`
	Url          string `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	Organization *User  `protobuf:"bytes,69,opt,name=organization" json:"organization,omitempty"`
}

func (m *Repository) Reset()                    { *m = Repository{} }
func (m *Repository) String() string            { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()               {}
func (*Repository) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Repository) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Repository) GetOwner() *User {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Repository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Repository) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Repository) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Repository) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *Repository) GetFork() bool {
	if m != nil {
		return m.Fork
	}
	return false
}

func (m *Repository) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Repository) GetOrganization() *User {
	if m != nil {
		return m.Organization
	}
	return nil
}

func init() {
	proto.RegisterType((*Repository)(nil), "vcs.Repository")
}

func init() { proto.RegisterFile("repository.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x3d, 0x4b, 0xc4, 0x40,
	0x10, 0x86, 0xd9, 0xe4, 0x3e, 0x92, 0x39, 0x91, 0x63, 0xaa, 0x41, 0x0b, 0x17, 0xab, 0x34, 0xa6,
	0xd0, 0xdf, 0x60, 0x6b, 0xb1, 0x60, 0x2d, 0x31, 0xd9, 0x93, 0xc5, 0x98, 0x09, 0xb3, 0x49, 0x44,
	0xff, 0xbc, 0xb2, 0x73, 0x28, 0x7a, 0xdd, 0xbb, 0xcf, 0xb3, 0xcc, 0x3b, 0x0c, 0xec, 0xc5, 0x8f,
	0x1c, 0xc3, 0xc4, 0xf2, 0x51, 0x8f, 0xc2, 0x13, 0x63, 0xbe, 0xb4, 0xf1, 0x02, 0xe6, 0xe8, 0xe5,
	0x08, 0xae, 0xbf, 0x0c, 0x80, 0xfb, 0xfd, 0x85, 0xe7, 0x90, 0x85, 0x8e, 0x8c, 0x35, 0x55, 0xee,
	0xb2, 0xd0, 0xe1, 0x15, 0xac, 0xf9, 0x7d, 0xf0, 0x42, 0x99, 0x35, 0xd5, 0xee, 0xb6, 0xac, 0x97,
	0x36, 0xd6, 0x8f, 0xd1, 0x8b, 0x3b, 0x72, 0x44, 0x58, 0x0d, 0xcd, 0x9b, 0xa7, 0xdc, 0x9a, 0xaa,
	0x74, 0x9a, 0xf1, 0x12, 0xca, 0xc3, 0xdc, 0xf7, 0x4f, 0x2a, 0x56, 0x2a, 0x8a, 0x04, 0x1e, 0x92,
	0xb4, 0xb0, 0xeb, 0x7c, 0x6c, 0x25, 0x8c, 0x53, 0xe0, 0x81, 0xd6, 0xaa, 0xff, 0x22, 0x24, 0xd8,
	0x8e, 0x12, 0x96, 0x66, 0xf2, 0xb4, 0xb1, 0xa6, 0x2a, 0xdc, 0xcf, 0x33, 0x95, 0x1d, 0x58, 0x5e,
	0x69, 0xab, 0x58, 0x33, 0xee, 0x21, 0x9f, 0xa5, 0xa7, 0x42, 0xe7, 0xa4, 0x88, 0x37, 0x70, 0xc6,
	0xf2, 0xd2, 0x0c, 0xe1, 0xb3, 0xd1, 0x8a, 0xfb, 0xd3, 0xd5, 0xff, 0xe9, 0xe7, 0x8d, 0x1e, 0xe2,
	0xee, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x47, 0x89, 0xa7, 0x2d, 0x01, 0x00, 0x00,
}
