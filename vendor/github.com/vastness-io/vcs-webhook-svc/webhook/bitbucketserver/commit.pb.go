// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commit.proto

package bitbucketserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ToCommit struct {
	AuthorTimestamp int64         `protobuf:"varint,1,opt,name=authorTimestamp" json:"authorTimestamp,omitempty"`
	DisplayId       string        `protobuf:"bytes,2,opt,name=displayId" json:"displayId,omitempty"`
	Id              string        `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Message         string        `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Author          *CommitAuthor `protobuf:"bytes,5,opt,name=author" json:"author,omitempty"`
	Parents         []*Parent     `protobuf:"bytes,6,rep,name=parents" json:"parents,omitempty"`
}

func (m *ToCommit) Reset()                    { *m = ToCommit{} }
func (m *ToCommit) String() string            { return proto.CompactTextString(m) }
func (*ToCommit) ProtoMessage()               {}
func (*ToCommit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ToCommit) GetAuthorTimestamp() int64 {
	if m != nil {
		return m.AuthorTimestamp
	}
	return 0
}

func (m *ToCommit) GetDisplayId() string {
	if m != nil {
		return m.DisplayId
	}
	return ""
}

func (m *ToCommit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ToCommit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ToCommit) GetAuthor() *CommitAuthor {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *ToCommit) GetParents() []*Parent {
	if m != nil {
		return m.Parents
	}
	return nil
}

type FromCommit struct {
	DisplayID string `protobuf:"bytes,1,opt,name=displayID" json:"displayID,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *FromCommit) Reset()                    { *m = FromCommit{} }
func (m *FromCommit) String() string            { return proto.CompactTextString(m) }
func (*FromCommit) ProtoMessage()               {}
func (*FromCommit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *FromCommit) GetDisplayID() string {
	if m != nil {
		return m.DisplayID
	}
	return ""
}

func (m *FromCommit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*ToCommit)(nil), "bitbucketserver.ToCommit")
	proto.RegisterType((*FromCommit)(nil), "bitbucketserver.FromCommit")
}

func init() { proto.RegisterFile("commit.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x49, 0x56, 0xb7, 0x76, 0x5a, 0x2c, 0xc4, 0x83, 0xa1, 0x28, 0x84, 0x9e, 0x72, 0x5a,
	0xb0, 0xe2, 0xc5, 0x9b, 0x58, 0x04, 0x6f, 0x12, 0x7a, 0x97, 0x6c, 0x13, 0x34, 0x68, 0x4c, 0x48,
	0x52, 0xc1, 0x17, 0xf6, 0x39, 0x84, 0x24, 0x8b, 0x65, 0x7b, 0xcc, 0x3f, 0xdf, 0x84, 0xef, 0x1f,
	0x98, 0xef, 0x9c, 0xb5, 0x26, 0x75, 0x3e, 0xb8, 0xe4, 0xc8, 0xa2, 0x37, 0xa9, 0xdf, 0xef, 0x3e,
	0x74, 0x8a, 0x3a, 0x7c, 0xeb, 0xb0, 0xbc, 0x28, 0xe3, 0x57, 0xb9, 0x4f, 0xef, 0x2e, 0x14, 0x6a,
	0x39, 0xf7, 0x32, 0xe8, 0xaf, 0xba, 0xb3, 0xfa, 0x45, 0x70, 0xb6, 0x75, 0x8f, 0x99, 0x23, 0x1c,
	0x16, 0x05, 0xdd, 0x1a, 0xab, 0x63, 0x92, 0xd6, 0x53, 0xc4, 0x10, 0x6f, 0xc4, 0x38, 0x26, 0x57,
	0x30, 0x55, 0x26, 0xfa, 0x4f, 0xf9, 0xf3, 0xac, 0x28, 0x66, 0x88, 0x4f, 0xc5, 0x7f, 0x40, 0xce,
	0x01, 0x1b, 0x45, 0x9b, 0x1c, 0x63, 0xa3, 0x08, 0x85, 0x89, 0xd5, 0x31, 0xca, 0x37, 0x4d, 0x4f,
	0x72, 0x38, 0x3c, 0xc9, 0x1d, 0xb4, 0xe5, 0x6b, 0x7a, 0xca, 0x10, 0x9f, 0xad, 0xaf, 0xbb, 0x51,
	0x87, 0xae, 0xa8, 0x3d, 0x64, 0x48, 0x54, 0x98, 0xdc, 0xc0, 0xa4, 0xb4, 0x88, 0xb4, 0x65, 0x0d,
	0x9f, 0xad, 0x2f, 0x8f, 0xf6, 0x5e, 0xf2, 0x5c, 0x0c, 0xdc, 0xea, 0x1e, 0xe0, 0x29, 0x38, 0x5b,
	0x9b, 0x1e, 0xf8, 0x6f, 0x72, 0xc7, 0x03, 0xff, 0x4d, 0xf5, 0xc7, 0x83, 0x7f, 0xdf, 0xe6, 0x5b,
	0xdd, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x1c, 0x20, 0x33, 0x6f, 0x01, 0x00, 0x00,
}
