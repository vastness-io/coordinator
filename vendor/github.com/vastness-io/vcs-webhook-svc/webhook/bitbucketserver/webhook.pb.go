// Code generated by protoc-gen-go. DO NOT EDIT.
// source: webhook.proto

package bitbucketserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BitbucketServerPostWebhook service

type BitbucketServerPostWebhookClient interface {
	OnPush(ctx context.Context, in *PostWebhook, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type bitbucketServerPostWebhookClient struct {
	cc *grpc.ClientConn
}

func NewBitbucketServerPostWebhookClient(cc *grpc.ClientConn) BitbucketServerPostWebhookClient {
	return &bitbucketServerPostWebhookClient{cc}
}

func (c *bitbucketServerPostWebhookClient) OnPush(ctx context.Context, in *PostWebhook, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/bitbucketserver.BitbucketServerPostWebhook/OnPush", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BitbucketServerPostWebhook service

type BitbucketServerPostWebhookServer interface {
	OnPush(context.Context, *PostWebhook) (*google_protobuf1.Empty, error)
}

func RegisterBitbucketServerPostWebhookServer(s *grpc.Server, srv BitbucketServerPostWebhookServer) {
	s.RegisterService(&_BitbucketServerPostWebhook_serviceDesc, srv)
}

func _BitbucketServerPostWebhook_OnPush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostWebhook)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BitbucketServerPostWebhookServer).OnPush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bitbucketserver.BitbucketServerPostWebhook/OnPush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BitbucketServerPostWebhookServer).OnPush(ctx, req.(*PostWebhook))
	}
	return interceptor(ctx, in, info, handler)
}

var _BitbucketServerPostWebhook_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bitbucketserver.BitbucketServerPostWebhook",
	HandlerType: (*BitbucketServerPostWebhookServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OnPush",
			Handler:    _BitbucketServerPostWebhook_OnPush_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webhook.proto",
}

func init() { proto.RegisterFile("webhook.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4f, 0x4d, 0xca,
	0xc8, 0xcf, 0xcf, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4f, 0xca, 0x2c, 0x49, 0x2a,
	0x4d, 0xce, 0x4e, 0x2d, 0x29, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0x92, 0x92, 0x4e, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x07, 0x4b, 0x27, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16, 0x94, 0x54, 0x42, 0x54,
	0x4b, 0x09, 0x15, 0xe4, 0x17, 0x97, 0xc4, 0xa3, 0x98, 0x60, 0x14, 0xc3, 0x25, 0xe5, 0x04, 0x33,
	0x23, 0x18, 0x6c, 0x46, 0x40, 0x7e, 0x71, 0x49, 0x38, 0x44, 0x8d, 0x90, 0x1d, 0x17, 0x9b, 0x7f,
	0x5e, 0x40, 0x69, 0x71, 0x86, 0x90, 0x8c, 0x1e, 0x9a, 0x55, 0x7a, 0x48, 0xea, 0xa4, 0xc4, 0xf4,
	0x20, 0xf6, 0xea, 0xc1, 0xec, 0xd5, 0x73, 0x05, 0xd9, 0x9b, 0xc4, 0x06, 0xe6, 0x1b, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x21, 0x9a, 0xb9, 0x82, 0xb7, 0x00, 0x00, 0x00,
}
